@import url('https://fonts.googleapis.com/css?family=Lato:300,400,400i,700,900');
@import url('https://fonts.googleapis.com/css?family=Cinzel:400,700,900');
@import 'colors';

/* Font weights */
$extra-bold                     : 900;
$bold                           : 700;
$semi-bold                      : 600;
$regular                        : 400;
$light                          : 300;

$font-stack                     : 'Lato', 'Helvetica', sans-serif;

body {
  background: $black;
  color: $white;
  font-family: $font-stack;
  font-size: 16px;
  line-height: 1.5;
}

::selection {
  background: $charcoal-80;
  color: white;
}
::-moz-selection {
  background: $charcoal-80;
  color: white;
}

a,
.link {
  color: $blue;
  font-size: inherit;
  font-weight: $regular;
  text-decoration: none;

  &:hover {
    text-decoration: none;
  }
}

.link--no-underline:hover {
  text-decoration: none;
}

/* Layouts */
.flex-centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Mixins and animations */
@mixin prefixer($property, $value) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  #{$property}: $value;
}

/* Use this for transforms
 * Syntax example:
 *    @include transform(translateY(-50px));
 */
@mixin transform($property: none) {
  @include prefixer(transform, $property);
}

@mixin transform-origin($origin: center) {
  @include prefixer(transform-origin, $origin);
}

/* Use this for transforms
 * Syntax example:
 *    @include appearance(none);
 */
@mixin appearance($property: none) {
  @include prefixer(appearance, $property);
}

/* Use this for filters
 * Syntax example:
 *    @include filter(grayscale(100%));
 */
@mixin filter($property: none) {
  @include prefixer(filter, $property);
}

/* Use this for keyframe animations
 * Syntax example:
 *    @include keyframes(myRotate) {
 *      from {
 *        @include transform(rotate(0deg));
 *      }
 *      to {
 *        @include transform(rotate(360deg));
 *      }
 *    }
 */
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

/* Animation properties: can't use shorthand notation
 * for Safari, so all properties prefixed.
 */
@mixin animation-name($name...) {
  @include prefixer(animation-name, $name);
}

@mixin animation-duration($duration...) {
  @include prefixer(animation-duration, $duration);
}

@mixin animation-iteration-count($count...) {
  @include prefixer(animation-iteration-count, $count);
}

@mixin animation-timing-function($function...) {
  @include prefixer(animation-timing-function, $function);
}

@mixin animation-fill-mode($fill...) {
  @include prefixer(animation-fill-mode, $fill);
}

@mixin animation-delay($delay...) {
  @include prefixer(animation-delay, $delay);
}

@mixin transition-timing-function($function...) {
  @include prefixer(transition-timing-function, $function);
}

/* Animations */
@mixin rotate($start: 0, $end: 0) {
  @include keyframes(rotate#{$start}To#{$end}) {
    from {
      @include transform(rotate(#{$start}deg));
    }
    to {
      @include transform(rotate(#{$end}deg));
    }
  }
}

// Clearfix for floats
@mixin clearAfter {
  &:after {
    clear: both;
    content: "";
    height: 0;
    visibility: hidden;
    display: block;
  }
}

@mixin overflowText {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
